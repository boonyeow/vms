package com.vms.repository;

import com.vms.model.Form;
import com.vms.model.Field;
import com.vms.model.keys.FormCompositeKey;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.CrudRepository;

import java.util.List;
import java.util.Optional;

public interface FormRepository extends CrudRepository<Form, FormCompositeKey> {
    @Query("SELECT f FROM Form f WHERE f.id.id = :id")
    List<Form> findByFormId_Id(Long id);

    @Query("SELECT f FROM Form f WHERE f.id.id = :id ORDER BY f.id.revisionNo DESC LIMIT 1")
    Form findLatestForm(Long id);

    @Query("SELECT MAX(f.id.id) FROM Form f")
    Long getMaxId();

    @Query("SELECT f FROM Form f WHERE f.isFinal = :state")
    List<Form> findFormByState(Boolean state);

    default Form saveWithAutoGeneratedId(Form form) {
        FormCompositeKey fck = form.getId();
        if (fck.getId() == null) {
            Long maxId = getMaxId();
            Long newId = (maxId == null) ? 0L : maxId + 1;
            fck = FormCompositeKey.builder()
                    .id(newId)
                    .revisionNo(form.getId().getRevisionNo())
                    .build();
            form.setId(fck);
        }
        return save(form);
    }

}